ktor {
    deployment {
        # This is already perfect for Render!
        # `port = ${?PORT}` means use the PORT env var if it exists.
        # `port = 8080` acts as a fallback for local development if PORT isn't set.
        port = 8080
        port = ${?PORT}
        host = "0.0.0.0"
    }
    application {
        modules = [ com.example.ApplicationKt.module ]
    }
    database {
       # --- IMPORTANT CHANGES HERE FOR PRODUCTION DATABASE ---
       # These will now read from environment variables set on Render.
       # Ensure you set these environment variables on your Render Web Service.
       jdbcUrl = ${DATABASE_URL}~
       driver = "org.postgresql.Driver" # This can stay hardcoded as it's the Java driver class
       user = ${DATABASE_USER}
       password = ${DATABASE_PASSWORD}

       # Optional: If you want to keep local development credentials in conf for convenience,
       # you can use fallbacks like this. Commented out for clarity, uncomment if desired.
       # jdbcUrl = ${?DATABASE_URL, "jdbc:postgresql://localhost:5432/happin"}
       # user = ${?DATABASE_USER, "av"}
       # password = ${?DATABASE_PASSWORD, "root"}
    }
    jwt {
        # --- IMPORTANT CHANGES HERE FOR JWT/FIREBASE CONFIGURATION ---
        # These should also come from environment variables for production.
        domain = "https://jwt-provider-domain/"
                audience = "jwt-audience"
                realm = "ktor sample app"
                firebaseProjectId = "happin-1b2da"
    }
}